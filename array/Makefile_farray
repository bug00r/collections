MAKE?=mingw32-make
AR?=ar
ARFLAGS?=rcs
PATHSEP?=/
CC=gcc
BUILDROOT?=build

ifeq ($(CLANG),1)
	export CC=clang
endif

BUILDDIR?=$(BUILDROOT)$(PATHSEP)$(CC)
BUILDPATH?=$(BUILDDIR)$(PATHSEP)

ifeq ($(DEBUG),1)
	export debug=-Ddebug=1 -ggdb
	export isdebug=1
endif

ifeq ($(ANALYSIS),1)
	export analysis=-Danalysis=1
	export isanalysis=1
endif

ifeq ($(DEBUG),2)
	export debug=-Ddebug=2 -ggdb
	export isdebug=1
endif

ifeq ($(DEBUG),3)
	export debug=-Ddebug=3 -ggdb
	export isdebug=1
endif

ifeq ($(OUTPUT),1)
	export outimg=-Doutput=1
endif

BIT_SUFFIX=

ifeq ($(M32),1)
	CFLAGS+=-m32
	BIT_SUFFIX+=32
endif

CFLAGS+=-std=c11 -Wpedantic -pedantic-errors -Wall -Wextra $(debug)
##-ggdb
##-pg for profiling 

MODULE=farray

SRC=$(MODULE).c

LIBNAME=lib$(MODULE).a
OBJS=$(MODULE).o

TESTSRC=test_$(MODULE).c
TESTBIN=test_$(MODULE).exe
TESTLIB=-larray -l$(MODULE)
TESTLIBDIR=-L$(BUILDDIR)

INSTALL_ROOT?=$(BUILDPATH)

all: $(addprefix $(BUILDPATH),$(LIBNAME) $(TESTBIN) $(OBJS)) test
 
$(BUILDPATH)$(LIBNAME): $(BUILDPATH)$(OBJS)
	$(AR) $(ARFLAGS) $(BUILDPATH)$(LIBNAME) $(BUILDPATH)$(OBJS)

$(BUILDPATH)$(OBJS): $(MODULE).h
	$(CC) $(CFLAGS) -c $(SRC) -o $(BUILDPATH)$(OBJS)

$(BUILDPATH)$(TESTBIN):
	$(CC) $(CFLAGS) $(TESTSRC) -o $(BUILDPATH)$(TESTBIN) $(TESTLIBDIR) $(TESTLIB) 
	
.PHONY: test

test: 
	./$(BUILDPATH)$(TESTBIN)

install:
	mkdir -p $(INSTALL_ROOT)include
	mkdir -p $(INSTALL_ROOT)lib$(BIT_SUFFIX)
	cp ./$(MODULE).h $(INSTALL_ROOT)include/$(MODULE).h
	cp $(BUILDPATH)$(LIBNAME) $(INSTALL_ROOT)lib$(BIT_SUFFIX)/$(LIBNAME)