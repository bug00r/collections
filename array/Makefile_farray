_CFLAGS:=$(CFLAGS)
CFLAGS+=$(_CFLAGS)
_LDFLAGS:=$(LDFLAGS)
LDFLAGS+=$(_LDFLAGS)

ARFLAGS?=rcs
PATHSEP?=/
BUILDROOT?=build

BUILDDIR?=$(BUILDROOT)$(PATHSEP)$(CC)
BUILDPATH?=$(BUILDDIR)$(PATHSEP)

ifndef PREFIX
	INSTALL_ROOT=$(BUILDPATH)
else
	INSTALL_ROOT=$(PREFIX)$(PATHSEP)
	ifeq ($(INSTALL_ROOT),/)
	INSTALL_ROOT=$(BUILDPATH)
	endif
endif

ifdef DEBUG
	CFLAGS+=-ggdb
	ifeq ($(DEBUG),)
	CFLAGS+=-Ddebug=1
	else 
	CFLAGS+=-Ddebug=$(DEBUG)
	endif
endif

ifeq ($(M32),1)
	CFLAGS+=-m32
	BIT_SUFFIX+=32
endif

CFLAGS+=-std=c11 -Wpedantic -Wall -Wextra
##-ggdb
##-pg for profiling 

MODULE=farray

SRC=$(MODULE).c

LIBNAME=lib$(MODULE).a
LIB=$(BUILDPATH)$(LIBNAME)
OBJS=$(BUILDPATH)$(MODULE).o

TESTSRC=test_$(MODULE).c
TESTBIN=$(BUILDPATH)test_$(MODULE).exe
TESTLIB=-larray -l$(MODULE)
TESTLIBDIR=-L$(BUILDDIR)

LDFLAGS+=$(TESTLIBDIR) $(TESTLIB) 

all: $(LIB)
 
$(LIB): $(OBJS)
	$(AR) $(ARFLAGS) $@ $(OBJS)

$(BUILDDIR)/%.o : %.c
	$(CC) $(CFLAGS) -c $< -o $@ 

$(TESTBIN): $(LIB)
	$(CC) $(CFLAGS) $(TESTSRC) -o $@ $(LDFLAGS)
	
.PHONY: test

test: $(TESTBIN)
	./$(TESTBIN)

install:
	mkdir -p $(INSTALL_ROOT)include
	mkdir -p $(INSTALL_ROOT)lib$(BIT_SUFFIX)
	cp ./$(MODULE).h $(INSTALL_ROOT)include/$(MODULE).h
	cp $(LIB) $(INSTALL_ROOT)lib$(BIT_SUFFIX)/$(LIBNAME)